#!/usr/bin/python3

import numpy as np
import pygame as PG
import Vector
from .AbstractNavAlgo import AbstractNavigationAlgorithm
from RobotControlInput import RobotControlInput

## A navigation algorithm that uses the position of the mouse to decide 
# the movement direction. In effect, the user manually controls the 
# navigation.
#
# @see
# \ref AbstractNavAlgo.AbstractNavigationAlgorithm
# 	"AbstractNavigationAlgorithm"
#
class ManualMouseNavigationAlgorithm(AbstractNavigationAlgorithm):

	## Initializes the navigation algorithm.
	# 
	# @param sensors (dict of sensors)
	# <br>	-- the sensors that this algorithm has access to
	#
	# @param target (Target obj)
	# <br>	-- the target for the navigation
	#
	# @param cmdargs (object)
	# <br>	-- A command-line arguments object generated by `argparse`.
	# 
	def __init__(self, sensors, target, cmdargs):
		self._sensors = sensors;
		self._target  = target
		self._cmdargs = cmdargs;

		self._gps   = sensors['gps'];

		self.debug_info = {};


	def select_next_action(self):
		vec = np.array(PG.mouse.get_pos(), dtype=np.float64) - self._gps.location();
		speed = Vector.magnitudeOf(vec);
		next_action = RobotControlInput(speed, Vector.degrees_between(np.array([0,0]), vec));
		return next_action;

